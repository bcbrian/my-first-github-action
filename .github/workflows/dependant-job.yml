# This is a basic workflow that is manually triggered

name: dependant job

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  check:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
      can_release: ${{ steps.check-should-release.outputs.can_release }}
      
     
   
    

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    #setup
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: 12.x
    # Runs a single command using the runners shell
    - name: setup
      run:  chmod +x .scripts/canCI.sh
    - name: check if should release
      run: .scripts/canCI.sh "::set-output name=can_release::true"
      id: check-should-release


  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: check
    if: ${{ needs.check.outputs.can_release == 'true' }}
    

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    #setup
    - name: release setup
      run: echo "we are releasing  ${{ needs.check.outputs.can_release }}"
  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
    - id: step1
      run: echo "::set-output name=test::hello"
    - id: step2
      run: echo "::set-output name=test::world"
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
    - run: echo ${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}}
